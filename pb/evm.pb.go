// Copyright Rivtower Technologies LLC.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: vm/evm.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionHash     []byte `protobuf:"bytes,1,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	TransactionIndex    uint64 `protobuf:"varint,2,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index,omitempty"`
	BlockHash           []byte `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockNumber         uint64 `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	CumulativeQuotaUsed []byte `protobuf:"bytes,5,opt,name=cumulative_quota_used,json=cumulativeQuotaUsed,proto3" json:"cumulative_quota_used,omitempty"`
	QuotaUsed           []byte `protobuf:"bytes,6,opt,name=quota_used,json=quotaUsed,proto3" json:"quota_used,omitempty"`
	ContractAddress     []byte `protobuf:"bytes,7,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Logs                []*Log `protobuf:"bytes,8,rep,name=logs,proto3" json:"logs,omitempty"`
	StateRoot           []byte `protobuf:"bytes,9,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	LogsBloom           []byte `protobuf:"bytes,10,opt,name=logs_bloom,json=logsBloom,proto3" json:"logs_bloom,omitempty"`
	ErrorMessage        string `protobuf:"bytes,11,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	mi := &file_vm_evm_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{0}
}

func (x *Receipt) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *Receipt) GetTransactionIndex() uint64 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

func (x *Receipt) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Receipt) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Receipt) GetCumulativeQuotaUsed() []byte {
	if x != nil {
		return x.CumulativeQuotaUsed
	}
	return nil
}

func (x *Receipt) GetQuotaUsed() []byte {
	if x != nil {
		return x.QuotaUsed
	}
	return nil
}

func (x *Receipt) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *Receipt) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *Receipt) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *Receipt) GetLogsBloom() []byte {
	if x != nil {
		return x.LogsBloom
	}
	return nil
}

func (x *Receipt) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address             []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Topics              [][]byte `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Data                []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	BlockHash           []byte   `protobuf:"bytes,4,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockNumber         uint64   `protobuf:"varint,5,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TransactionHash     []byte   `protobuf:"bytes,6,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	TransactionIndex    uint64   `protobuf:"varint,7,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index,omitempty"`
	LogIndex            uint64   `protobuf:"varint,8,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	TransactionLogIndex uint64   `protobuf:"varint,9,opt,name=transaction_log_index,json=transactionLogIndex,proto3" json:"transaction_log_index,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	mi := &file_vm_evm_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{1}
}

func (x *Log) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Log) GetTopics() [][]byte {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *Log) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Log) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Log) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Log) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (x *Log) GetTransactionIndex() uint64 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

func (x *Log) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *Log) GetTransactionLogIndex() uint64 {
	if x != nil {
		return x.TransactionLogIndex
	}
	return 0
}

type ByteCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByteCode []byte `protobuf:"bytes,1,opt,name=byte_code,json=byteCode,proto3" json:"byte_code,omitempty"`
}

func (x *ByteCode) Reset() {
	*x = ByteCode{}
	mi := &file_vm_evm_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ByteCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteCode) ProtoMessage() {}

func (x *ByteCode) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteCode.ProtoReflect.Descriptor instead.
func (*ByteCode) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{2}
}

func (x *ByteCode) GetByteCode() []byte {
	if x != nil {
		return x.ByteCode
	}
	return nil
}

type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	mi := &file_vm_evm_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{3}
}

func (x *Balance) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Nonce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce []byte `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *Nonce) Reset() {
	*x = Nonce{}
	mi := &file_vm_evm_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Nonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nonce) ProtoMessage() {}

func (x *Nonce) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nonce.ProtoReflect.Descriptor instead.
func (*Nonce) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{4}
}

func (x *Nonce) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

type ByteAbi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesAbi []byte `protobuf:"bytes,1,opt,name=bytes_abi,json=bytesAbi,proto3" json:"bytes_abi,omitempty"`
}

func (x *ByteAbi) Reset() {
	*x = ByteAbi{}
	mi := &file_vm_evm_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ByteAbi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteAbi) ProtoMessage() {}

func (x *ByteAbi) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteAbi.ProtoReflect.Descriptor instead.
func (*ByteAbi) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{5}
}

func (x *ByteAbi) GetBytesAbi() []byte {
	if x != nil {
		return x.BytesAbi
	}
	return nil
}

type ByteQuota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesQuota []byte `protobuf:"bytes,1,opt,name=bytes_quota,json=bytesQuota,proto3" json:"bytes_quota,omitempty"`
}

func (x *ByteQuota) Reset() {
	*x = ByteQuota{}
	mi := &file_vm_evm_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ByteQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ByteQuota) ProtoMessage() {}

func (x *ByteQuota) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ByteQuota.ProtoReflect.Descriptor instead.
func (*ByteQuota) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{6}
}

func (x *ByteQuota) GetBytesQuota() []byte {
	if x != nil {
		return x.BytesQuota
	}
	return nil
}

type ReceiptProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receipt      []byte     `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
	ReceiptProof []byte     `protobuf:"bytes,2,opt,name=receipt_proof,json=receiptProof,proto3" json:"receipt_proof,omitempty"`
	RootsInfo    *RootsInfo `protobuf:"bytes,3,opt,name=roots_info,json=rootsInfo,proto3" json:"roots_info,omitempty"`
}

func (x *ReceiptProof) Reset() {
	*x = ReceiptProof{}
	mi := &file_vm_evm_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiptProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptProof) ProtoMessage() {}

func (x *ReceiptProof) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptProof.ProtoReflect.Descriptor instead.
func (*ReceiptProof) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiptProof) GetReceipt() []byte {
	if x != nil {
		return x.Receipt
	}
	return nil
}

func (x *ReceiptProof) GetReceiptProof() []byte {
	if x != nil {
		return x.ReceiptProof
	}
	return nil
}

func (x *ReceiptProof) GetRootsInfo() *RootsInfo {
	if x != nil {
		return x.RootsInfo
	}
	return nil
}

type RootsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height      uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	StateRoot   []byte `protobuf:"bytes,2,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	ReceiptRoot []byte `protobuf:"bytes,3,opt,name=receipt_root,json=receiptRoot,proto3" json:"receipt_root,omitempty"`
}

func (x *RootsInfo) Reset() {
	*x = RootsInfo{}
	mi := &file_vm_evm_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RootsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootsInfo) ProtoMessage() {}

func (x *RootsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootsInfo.ProtoReflect.Descriptor instead.
func (*RootsInfo) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{8}
}

func (x *RootsInfo) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *RootsInfo) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *RootsInfo) GetReceiptRoot() []byte {
	if x != nil {
		return x.ReceiptRoot
	}
	return nil
}

type BlockNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Lable:
	//
	//	*BlockNumber_Height
	//	*BlockNumber_Tag
	//	*BlockNumber_Hash
	Lable isBlockNumber_Lable `protobuf_oneof:"lable"`
}

func (x *BlockNumber) Reset() {
	*x = BlockNumber{}
	mi := &file_vm_evm_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockNumber) ProtoMessage() {}

func (x *BlockNumber) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockNumber.ProtoReflect.Descriptor instead.
func (*BlockNumber) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{9}
}

func (m *BlockNumber) GetLable() isBlockNumber_Lable {
	if m != nil {
		return m.Lable
	}
	return nil
}

func (x *BlockNumber) GetHeight() uint64 {
	if x, ok := x.GetLable().(*BlockNumber_Height); ok {
		return x.Height
	}
	return 0
}

func (x *BlockNumber) GetTag() string {
	if x, ok := x.GetLable().(*BlockNumber_Tag); ok {
		return x.Tag
	}
	return ""
}

func (x *BlockNumber) GetHash() []byte {
	if x, ok := x.GetLable().(*BlockNumber_Hash); ok {
		return x.Hash
	}
	return nil
}

type isBlockNumber_Lable interface {
	isBlockNumber_Lable()
}

type BlockNumber_Height struct {
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3,oneof"`
}

type BlockNumber_Tag struct {
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3,oneof"`
}

type BlockNumber_Hash struct {
	Hash []byte `protobuf:"bytes,3,opt,name=hash,proto3,oneof"`
}

func (*BlockNumber_Height) isBlockNumber_Lable() {}

func (*BlockNumber_Tag) isBlockNumber_Lable() {}

func (*BlockNumber_Hash) isBlockNumber_Lable() {}

type GetCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     *Address     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber *BlockNumber `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *GetCodeRequest) Reset() {
	*x = GetCodeRequest{}
	mi := &file_vm_evm_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCodeRequest) ProtoMessage() {}

func (x *GetCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCodeRequest.ProtoReflect.Descriptor instead.
func (*GetCodeRequest) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{10}
}

func (x *GetCodeRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetCodeRequest) GetBlockNumber() *BlockNumber {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type GetBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     *Address     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber *BlockNumber `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *GetBalanceRequest) Reset() {
	*x = GetBalanceRequest{}
	mi := &file_vm_evm_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalanceRequest) ProtoMessage() {}

func (x *GetBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetBalanceRequest) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{11}
}

func (x *GetBalanceRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetBalanceRequest) GetBlockNumber() *BlockNumber {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type GetTransactionCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     *Address     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber *BlockNumber `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *GetTransactionCountRequest) Reset() {
	*x = GetTransactionCountRequest{}
	mi := &file_vm_evm_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionCountRequest) ProtoMessage() {}

func (x *GetTransactionCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionCountRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionCountRequest) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{12}
}

func (x *GetTransactionCountRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetTransactionCountRequest) GetBlockNumber() *BlockNumber {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type GetAbiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     *Address     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber *BlockNumber `protobuf:"bytes,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *GetAbiRequest) Reset() {
	*x = GetAbiRequest{}
	mi := &file_vm_evm_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAbiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAbiRequest) ProtoMessage() {}

func (x *GetAbiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAbiRequest.ProtoReflect.Descriptor instead.
func (*GetAbiRequest) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{13}
}

func (x *GetAbiRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetAbiRequest) GetBlockNumber() *BlockNumber {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

type GetStorageAtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     *Address     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Position    *Hash        `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	BlockNumber *BlockNumber `protobuf:"bytes,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *GetStorageAtRequest) Reset() {
	*x = GetStorageAtRequest{}
	mi := &file_vm_evm_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStorageAtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageAtRequest) ProtoMessage() {}

func (x *GetStorageAtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vm_evm_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageAtRequest.ProtoReflect.Descriptor instead.
func (*GetStorageAtRequest) Descriptor() ([]byte, []int) {
	return file_vm_evm_proto_rawDescGZIP(), []int{14}
}

func (x *GetStorageAtRequest) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *GetStorageAtRequest) GetPosition() *Hash {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *GetStorageAtRequest) GetBlockNumber() *BlockNumber {
	if x != nil {
		return x.BlockNumber
	}
	return nil
}

var File_vm_evm_proto protoreflect.FileDescriptor

var file_vm_evm_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x76, 0x6d, 0x2f, 0x65, 0x76, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x65, 0x76, 0x6d, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x03, 0x0a, 0x07, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x75, 0x6d,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x62, 0x6c, 0x6f,
	0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c,
	0x6f, 0x6f, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb6, 0x02, 0x0a, 0x03, 0x4c, 0x6f, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a,
	0x15, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x67,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x27, 0x0a, 0x08, 0x42, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x26, 0x0a, 0x07, 0x42, 0x79,
	0x74, 0x65, 0x41, 0x62, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x61,
	0x62, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x79, 0x74, 0x65, 0x73, 0x41,
	0x62, 0x69, 0x22, 0x2c, 0x0a, 0x09, 0x42, 0x79, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x22, 0x7c, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12,
	0x2d, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x65,
	0x0a, 0x09, 0x52, 0x6f, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0x5a, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x12, 0x14, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x42, 0x07, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0x70, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x33,
	0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x6d, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x7c, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x33, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x62, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x76, 0x6d,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32, 0xea, 0x03, 0x0a, 0x0a, 0x52, 0x50,
	0x43, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70,
	0x74, 0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x1a,
	0x0c, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x2d, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e,
	0x65, 0x76, 0x6d, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x65, 0x76, 0x6d,
	0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x42, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x4e,
	0x6f, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x62, 0x69, 0x12, 0x12,
	0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x62, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x42, 0x79, 0x74, 0x65, 0x41, 0x62, 0x69,
	0x12, 0x36, 0x0a, 0x0d, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x12, 0x15, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x11, 0x2e, 0x65, 0x76, 0x6d, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x30, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x2e, 0x65,
	0x76, 0x6d, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x0e,
	0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41, 0x74, 0x12, 0x18,
	0x2e, 0x65, 0x76, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x41,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vm_evm_proto_rawDescOnce sync.Once
	file_vm_evm_proto_rawDescData = file_vm_evm_proto_rawDesc
)

func file_vm_evm_proto_rawDescGZIP() []byte {
	file_vm_evm_proto_rawDescOnce.Do(func() {
		file_vm_evm_proto_rawDescData = protoimpl.X.CompressGZIP(file_vm_evm_proto_rawDescData)
	})
	return file_vm_evm_proto_rawDescData
}

var file_vm_evm_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_vm_evm_proto_goTypes = []any{
	(*Receipt)(nil),                    // 0: evm.Receipt
	(*Log)(nil),                        // 1: evm.Log
	(*ByteCode)(nil),                   // 2: evm.ByteCode
	(*Balance)(nil),                    // 3: evm.Balance
	(*Nonce)(nil),                      // 4: evm.Nonce
	(*ByteAbi)(nil),                    // 5: evm.ByteAbi
	(*ByteQuota)(nil),                  // 6: evm.ByteQuota
	(*ReceiptProof)(nil),               // 7: evm.ReceiptProof
	(*RootsInfo)(nil),                  // 8: evm.RootsInfo
	(*BlockNumber)(nil),                // 9: evm.BlockNumber
	(*GetCodeRequest)(nil),             // 10: evm.GetCodeRequest
	(*GetBalanceRequest)(nil),          // 11: evm.GetBalanceRequest
	(*GetTransactionCountRequest)(nil), // 12: evm.GetTransactionCountRequest
	(*GetAbiRequest)(nil),              // 13: evm.GetAbiRequest
	(*GetStorageAtRequest)(nil),        // 14: evm.GetStorageAtRequest
	(*Address)(nil),                    // 15: common.Address
	(*Hash)(nil),                       // 16: common.Hash
	(*CallRequest)(nil),                // 17: executor.CallRequest
}
var file_vm_evm_proto_depIdxs = []int32{
	1,  // 0: evm.Receipt.logs:type_name -> evm.Log
	8,  // 1: evm.ReceiptProof.roots_info:type_name -> evm.RootsInfo
	15, // 2: evm.GetCodeRequest.address:type_name -> common.Address
	9,  // 3: evm.GetCodeRequest.block_number:type_name -> evm.BlockNumber
	15, // 4: evm.GetBalanceRequest.address:type_name -> common.Address
	9,  // 5: evm.GetBalanceRequest.block_number:type_name -> evm.BlockNumber
	15, // 6: evm.GetTransactionCountRequest.address:type_name -> common.Address
	9,  // 7: evm.GetTransactionCountRequest.block_number:type_name -> evm.BlockNumber
	15, // 8: evm.GetAbiRequest.address:type_name -> common.Address
	9,  // 9: evm.GetAbiRequest.block_number:type_name -> evm.BlockNumber
	15, // 10: evm.GetStorageAtRequest.address:type_name -> common.Address
	16, // 11: evm.GetStorageAtRequest.position:type_name -> common.Hash
	9,  // 12: evm.GetStorageAtRequest.block_number:type_name -> evm.BlockNumber
	16, // 13: evm.RPCService.GetTransactionReceipt:input_type -> common.Hash
	10, // 14: evm.RPCService.GetCode:input_type -> evm.GetCodeRequest
	11, // 15: evm.RPCService.GetBalance:input_type -> evm.GetBalanceRequest
	12, // 16: evm.RPCService.GetTransactionCount:input_type -> evm.GetTransactionCountRequest
	13, // 17: evm.RPCService.GetAbi:input_type -> evm.GetAbiRequest
	17, // 18: evm.RPCService.EstimateQuota:input_type -> executor.CallRequest
	16, // 19: evm.RPCService.GetReceiptProof:input_type -> common.Hash
	9,  // 20: evm.RPCService.GetRootsInfo:input_type -> evm.BlockNumber
	14, // 21: evm.RPCService.GetStorageAt:input_type -> evm.GetStorageAtRequest
	0,  // 22: evm.RPCService.GetTransactionReceipt:output_type -> evm.Receipt
	2,  // 23: evm.RPCService.GetCode:output_type -> evm.ByteCode
	3,  // 24: evm.RPCService.GetBalance:output_type -> evm.Balance
	4,  // 25: evm.RPCService.GetTransactionCount:output_type -> evm.Nonce
	5,  // 26: evm.RPCService.GetAbi:output_type -> evm.ByteAbi
	6,  // 27: evm.RPCService.EstimateQuota:output_type -> evm.ByteQuota
	7,  // 28: evm.RPCService.GetReceiptProof:output_type -> evm.ReceiptProof
	8,  // 29: evm.RPCService.GetRootsInfo:output_type -> evm.RootsInfo
	16, // 30: evm.RPCService.GetStorageAt:output_type -> common.Hash
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_vm_evm_proto_init() }
func file_vm_evm_proto_init() {
	if File_vm_evm_proto != nil {
		return
	}
	file_common_proto_init()
	file_blockchain_proto_init()
	file_executor_proto_init()
	file_vm_evm_proto_msgTypes[9].OneofWrappers = []any{
		(*BlockNumber_Height)(nil),
		(*BlockNumber_Tag)(nil),
		(*BlockNumber_Hash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vm_evm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vm_evm_proto_goTypes,
		DependencyIndexes: file_vm_evm_proto_depIdxs,
		MessageInfos:      file_vm_evm_proto_msgTypes,
	}.Build()
	File_vm_evm_proto = out.File
	file_vm_evm_proto_rawDesc = nil
	file_vm_evm_proto_goTypes = nil
	file_vm_evm_proto_depIdxs = nil
}
